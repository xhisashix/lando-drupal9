<?php

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\user\UserInterface;
use Drupal\marucha\Event\MaruchaFirstEvent;
use Drupal\marucha\Event\MaruchaEvents;

/**
 * Implements hook_form_alter().
 */
function marucha_form_alters(&$form, FormStateInterface $form_state, $form_id)
{
  if ($form_id == 'comment_comment_form') {
    $form['actions']['submit']['#value'] = t('コメント');
  }
}

/**
 * Implements hook_cron().
 */
function marucha_cron()
{
  $nodeStorage = \Drupal::entityTypeManager()->getStorage('node');

  $node = $nodeStorage->load(1);

  \Drupal::messenger()->addStatus('読み込んだノードタイトル: ' . $node->getTitle());

  $newNode = $nodeStorage->create([
    'type' => 'article',
    'title' => 'APIで作成したノード',
    'body' => '新しいノードの本文',
  ])->save();
}


/**
 * Implements hook_ENTITY_TYPE_view().
 */
function marucha_node_view(&$build, EntityInterface  $entity, EntityViewDisplayInterface $display, $view_mode)
{
  \Drupal::moduleHandler()->invokeAll('marucha_hello_world');
}

function marucha_marucha_hello_world()
{
  \Drupal::messenger()->addMessage('marucha_marucha_hello_world');
}

/**
 * Implements hook_user_login().
 */
function marucha_user_login(UserInterface $account)
{
  $event = new MaruchaFirstEvent($account);
  $event_dispatcher = \Drupal::service('event_dispatcher');
  $event_dispatcher->dispatch($event, MaruchaEvents::FIRST_EVENT);
}
